package com.microservice.productservice.rest;

import java.util.UUID;

import org.axonframework.commandhandling.gateway.CommandGateway;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.microservice.productservice.axoncommands.CreateProductCommand;
import com.microservice.productservice.model.Product;

@RestController
@RequestMapping("/products")
public class ProductController {
	
	@Autowired //Property based injection
	private Environment env;
	private final CommandGateway commandGateway;
	
	@Autowired //Constructor based injection
	public ProductController(CommandGateway commandGateway) {
		this.commandGateway = commandGateway;
	}

	@PostMapping
	public String createProduct(@RequestBody Product product) {
		
		CreateProductCommand createProductCommand = CreateProductCommand.builder()
				.price(product.getPrice())
				.title(product.getTitle())
				.quantity(product.getQuantity())
				.productId(UUID.randomUUID().toString())
				.build();
		
		String returnValue;
		try {
			//Send the command to command bus
			returnValue = commandGateway.sendAndWait(createProductCommand);
		}catch(Exception ex) {
			returnValue = ex.getLocalizedMessage();
		}
		
		return returnValue;
	}

	@GetMapping
	public String getProduct() {
		return "http GET handled " + env.getProperty("local.server.port");
	}

	@PutMapping
	public String updateProduct() {
		return "http PUT handled";
	}

	@DeleteMapping
	public String deleteProduct() {
		return "http DELETE handled";
	}

}
